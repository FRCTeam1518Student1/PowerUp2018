// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1518.robot;

import org.usfirst.frc1518.robot.commands.*;

import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 * 
 * Mapping buttons - 
 * 	Shooting - Right Trigger
 * 	Intake - Left Trigger
 *  Climb - Left Thumb Low (2)
 *  Unjam - Right Thumb Low (2)
 *  Servos - Right Thumb High (3)
 *  Reverse Controls - Left Thumb High (3)
 */
public class OI {
public static Joystick mainstick;
public static JoystickButton soleButton0;
public static JoystickButton soleButton1;
public static JoystickButton soleButton2;
public static JoystickButton liftup;
public static JoystickButton liftdown;
public static JoystickButton climbup;
public static JoystickButton climbdown;
public static JoystickButton turbo;

    public OI() {

    	mainstick = new Joystick(0);
    	liftup = new JoystickButton(mainstick, 5);
    	liftup.whileHeld(new BoxLifter(true));
    	liftdown = new JoystickButton(mainstick, 3);
    	liftdown.whileHeld(new BoxLifter(false));
    	climbup = new JoystickButton(mainstick, 6);
    	climbup.whileHeld(new Climber(true));
    	climbdown = new JoystickButton(mainstick, 4);
    	climbdown.whileHeld(new Climber(false));
    	turbo = new JoystickButton(mainstick, 2);
    	soleButton0 = new JoystickButton(mainstick, 7);
    	soleButton0.whenPressed(new AirActuators(0));
    	soleButton1 = new JoystickButton(mainstick, 9);
    	soleButton1.whenPressed(new AirActuators(1));
    	soleButton2 = new JoystickButton(mainstick, 11);
    	soleButton2.whenPressed(new AirActuators(2));
    }
    
    public static void init() {
    	SmartDashboard.putData("Autonomous Command", new Auto1());
        Robot.feedSpeed = mainstick.getThrottle();
    }
}

